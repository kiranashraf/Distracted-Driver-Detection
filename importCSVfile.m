function [img,c0,c1,c2,c3,c4,c5,c6,c7,c8,c9] = importCSVfile(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as column vectors.
%   [IMG,C0,C1,C2,C3,C4,C5,C6,C7,C8,C9] = IMPORTFILE(FILENAME) Reads data
%   from text file FILENAME for the default selection.
%
%   [IMG,C0,C1,C2,C3,C4,C5,C6,C7,C8,C9] = IMPORTFILE(FILENAME, STARTROW,
%   ENDROW) Reads data from rows STARTROW through ENDROW of text file
%   FILENAME.
%
% Example:
%   [img,c0,c1,c2,c3,c4,c5,c6,c7,c8,c9] = importfile('sample_submission.csv',2, 79727);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2016/12/13 23:44:54

%% Initialize variables.
delimiter = ',';
if nargin<=2
    startRow = 2;
    endRow = inf;
end

%% Format string for each line of text:
%   column1: text (%s)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: double (%f)
%   column9: double (%f)
%	column10: double (%f)
%   column11: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%s%f%f%f%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
img = dataArray{:, 1};
c0 = dataArray{:, 2};
c1 = dataArray{:, 3};
c2 = dataArray{:, 4};
c3 = dataArray{:, 5};
c4 = dataArray{:, 6};
c5 = dataArray{:, 7};
c6 = dataArray{:, 8};
c7 = dataArray{:, 9};
c8 = dataArray{:, 10};
c9 = dataArray{:, 11};


